/*
Задача 4. Считывание двумерного массива из файла
Описание
Напишите программу, которая считывает из файла in.txt двумерный массив и выводит его на консоль.
При этом каждая строка должна быть развёрнута в обратную сторону.
Файл in.txt устроен следующим образом: первые два числа — это число строк и число столбцов двумерного массива.
Далее идёт сам двумерный массив в виде таблицы.

Пример работы программы
Файл in.txt:

2 3
1 2 3
4 5 6
Вывод на консоль:

3 2 1
6 5 4
Ещё один пример работы программы
Файл in.txt:

5 5
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25
Вывод на консоль:

5 4 3 2 1
10 9 8 7 6
15 14 13 12 11
20 19 18 17 16
25 24 23 22 21
*/

#include <iostream>
#include <fstream>

int main(int argc, char** argv)
{
	setlocale(LC_ALL, "");					// Устанавливаем системную локаль

	int rows{}, columns{};					// Переменные для хранения размера массива (кол-во строк и столбцов)

	std::ifstream fin("in.txt");			// Открываем файл

	if (fin.is_open()) {					// Если файл открылся

		fin >> rows;						// Читаем первое слово из файла и записываем его в переменную rows
		fin >> columns;						// Читаем второе слово из файла и записываем его в переменную columns
		
		int** arr = new int* [rows];		// Создаем двумерный массив (rows x columns)
		for (int r = 0; r < rows; r++)
		{
			arr[r] = new int[columns]();
		}
		
		for (int r = 0; r < rows; r++)		// Заполняем массив значениями из файла
		{
			for (int c = 0; c < columns; c++)
			{
				fin >> arr[r][c];
			}
		}
		
		fin.close();						// Закрываем файл

		for (int r = 0; r < rows; r++)		// Выводим массив в консоль (строки в обратном порядке)
		{
			for (int c = columns - 1; c >= 0; c--)
			{
				std::cout << arr[r][c] << " ";
			}
			std::cout << std::endl;
		}
		
		for (int r = 0; r < rows; r++)		// Очищение памяти, выделенной под массив
		{
			delete[] arr[r];				// очищаем каждый подмассив отдельно
		}
		delete[] arr;						// очищаем верхнеуровневый массив указателей

	}
	else {
		std::cout << "Ошибка открытия файла" << std::endl;
	}

	return EXIT_SUCCESS;
}